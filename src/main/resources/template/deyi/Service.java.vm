package ${java.packagePrefix}.service;

import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import javax.annotation.Resource;
import ${java.packagePrefix}.bean.db.${java.className};
import ${java.packagePrefix}.mapper.${java.className}Mapper;
import ${java.packagePrefix}.manager.${java.className}Manager;

/**
 * @ClassName ${java.className}Service
 * @Description ${java.note}服务接口
 * @Author ${java.author}
 * @Date ${java.dateTime}
 * @Email ${java.email}
 **/
@Service
@Slf4j
public class ${java.className}Service {
    @Resource
    private ${java.className}Mapper ${java.paramName}Mapper;

    @Resource
    private ${java.className}Manager ${java.paramName}Manager;

    public ${java.className}DTO listByPage(${java.className}DTO ${java.paramName}DTO) {
        // 分页
        if (Objects.nonNull(${java.paramName}DTO.getPagination())) {
            Pagination pagination = ${java.paramName}DTO.getPagination();
            Pagination.threadLocal.set(pagination);
        }

        // 获取数据
        List<${java.className}> ${java.paramName}List = ${java.paramName}Mapper.listByPage(${java.paramName}DTO);
        // 转换前端所需数据
        List<${java.className}DTO> data = ${java.paramName}List.stream().map(item -> {
            ${java.className}DTO result = new ${java.className}DTO();
            BeanUtils.copyProperties(item, result);
            return result;
        }).collect(Collectors.toList());


        ${java.paramName}DTO.set${java.className}DTOList(data);
        // 判断是否有分页
        if (Objects.nonNull(Pagination.threadLocal.get())){
                ${java.paramName}DTO.setPagination(Pagination.threadLocal.get());
            Pagination.threadLocal.remove();
        }
        return ${java.paramName}DTO;
    }
}

